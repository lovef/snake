// https://stackoverflow.com/a/42199863/1020871

const fs = require('fs');
const { Observable } = require('rxjs');

let exec = require('child_process').exec

const revision = new Observable(s => {
    exec('git rev-parse --short HEAD',
        function (error, stdout, stderr) {
            if (error !== null) {
                console.log('git error: ' + error + stderr)
            }
            s.next(stdout.toString().trim())
            s.complete()
        })
})

const branch = new Observable(s => {
    exec('git rev-parse --abbrev-ref HEAD',
        function (error, stdout, stderr) {
            if (error !== null) {
                console.log('git error: ' + error + stderr)
            }
            s.next(stdout.toString().trim())
            s.complete()
        })
})

Observable
    .combineLatest(revision, branch)
    .subscribe(([revision, branch]) => {
        const version = {
            version: process.env.npm_package_version,
            revision: revision,
            branch: branch
        }
        console.log(JSON.stringify(version))

        const content = '// This file is automatically generated by version.js\n' +
            '/* tslint:disable */\n' +
            `export const version = ${JSON.stringify(version)}`

        fs.writeFileSync(
            'src/environments/version.ts',
            content,
            { encoding: 'utf8' }
        )
    })
